{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\Users\\\\Nayla\\\\Escritorio\\\\UADEE\\\\Distribuidas desk\\\\codigoAPP\\\\node_modules\\\\react-native-simple-modal\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\n\nvar Modal = function (_Component) {\n  _inherits(Modal, _Component);\n\n  var _super = _createSuper(Modal);\n\n  function Modal() {\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      opacity: new Animated.Value(0),\n      scale: new Animated.Value(0.8),\n      offset: new Animated.Value(_this.props.offset)\n    };\n\n    _this.hardwareBackPress = function () {\n      if (_this.state.open) {\n        if (!_this.props.disableOnBackPress) {\n          _this.close();\n        }\n\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.close = function () {\n      _this.setPhase(0);\n    };\n\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.props.open) {\n        this.setState({\n          children: this.props.children\n        });\n        this.open();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      if (props.open && props.children !== this.state.children) {\n        this.setState({\n          children: props.children\n        });\n      }\n\n      if (props.animationDuration === 0) {\n        this.state.scale.setValue(1);\n      } else {\n        this.state.scale.setValue(this.props.open ? 1 : 0.8);\n      }\n\n      if (props.open !== this.props.open) {\n        if (props.open) {\n          this.open();\n        } else {\n          this.close();\n        }\n      }\n\n      if (props.offset !== this.props.offset) {\n        this.animateOffset(props.offset);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (Platform.OS === 'android') {\n        BackHandler.addEventListener('hardwareBackPress', this.hardwareBackPress);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (Platform.OS === 'android') {\n        BackHandler.removeEventListener('hardwareBackPress', this.hardwareBackPress);\n      }\n    }\n  }, {\n    key: \"executeCallbacks\",\n    value: function executeCallbacks(didOpen) {\n      if (didOpen) {\n        this.props.modalDidOpen();\n      } else {\n        this.setState({\n          open: false,\n          children: undefined\n        });\n        this.props.modalDidClose();\n      }\n    }\n  }, {\n    key: \"setPhase\",\n    value: function setPhase(toValue) {\n      var _this2 = this;\n\n      if (this.state.open != toValue) {\n        var _this$props = this.props,\n            animationDuration = _this$props.animationDuration,\n            animationTension = _this$props.animationTension;\n\n        if (animationDuration === 0) {\n          this.state.opacity.setValue(toValue);\n          this.executeCallbacks(toValue === 1);\n        } else {\n          Animated.timing(this.state.opacity, {\n            toValue: toValue,\n            duration: animationDuration\n          }).start();\n          Animated.spring(this.state.scale, {\n            toValue: toValue ? 1 : 0.8,\n            tension: animationTension\n          }).start(function () {\n            return _this2.executeCallbacks(toValue === 1);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          opacity = _this$state.opacity,\n          open = _this$state.open,\n          scale = _this$state.scale,\n          offset = _this$state.offset,\n          children = _this$state.children;\n      var containerStyles = [styles.absolute, styles.container, this.props.containerStyle];\n\n      if (!this.state.open) {\n        containerStyles.push(styles.hidden);\n      }\n\n      return React.createElement(View, _extends({\n        pointerEvents: open ? 'auto' : 'none',\n        style: containerStyles\n      }, this.props.containerProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 7\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.absolute,\n        disabled: !this.props.closeOnTouchOutside,\n        onPress: this.close,\n        activeOpacity: 0.75,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.defaultOverlayStyle, {\n          opacity: opacity\n        }, this.props.overlayStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }\n      })), React.createElement(Animated.View, _extends({\n        style: [styles.defaultModalStyle, this.props.modalStyle, {\n          opacity: opacity,\n          transform: [{\n            scale: scale\n          }, {\n            translateY: offset\n          }]\n        }]\n      }, this.props.modalProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }\n      }), children));\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      this.setState({\n        open: true\n      });\n      this.setPhase(1);\n    }\n  }, {\n    key: \"animateOffset\",\n    value: function animateOffset(offset) {\n      Animated.spring(this.state.offset, {\n        toValue: offset\n      }).start();\n    }\n  }]);\n\n  return Modal;\n}(Component);\n\nModal.propTypes = {\n  open: PropTypes.bool,\n  offset: PropTypes.number,\n  overlayStyle: ViewPropTypes.style,\n  animationDuration: PropTypes.number,\n  animationTension: PropTypes.number,\n  modalDidOpen: PropTypes.func,\n  modalDidClose: PropTypes.func,\n  closeOnTouchOutside: PropTypes.bool,\n  disableOnBackPress: PropTypes.bool\n};\nModal.defaultProps = {\n  open: false,\n  offset: 0,\n  animationDuration: 200,\n  animationTension: 40,\n  modalDidOpen: function modalDidOpen() {\n    return undefined;\n  },\n  modalDidClose: function modalDidClose() {\n    return undefined;\n  },\n  closeOnTouchOutside: true,\n  disableOnBackPress: false\n};\nvar styles = StyleSheet.create({\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0)'\n  },\n  container: {\n    justifyContent: 'center'\n  },\n  defaultModalStyle: {\n    borderRadius: 2,\n    margin: 20,\n    padding: 10,\n    backgroundColor: '#F5F5F5'\n  },\n  defaultOverlayStyle: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.75)'\n  },\n  hidden: {\n    top: -10000,\n    left: 0,\n    height: 0,\n    width: 0\n  }\n});\nexport default Modal;","map":{"version":3,"sources":["E:/Users/Nayla/Escritorio/UADEE/Distribuidas desk/codigoAPP/node_modules/react-native-simple-modal/index.js"],"names":["React","Component","PropTypes","ViewPropTypes","Modal","state","opacity","Animated","Value","scale","offset","props","hardwareBackPress","open","disableOnBackPress","close","setPhase","setState","children","animationDuration","setValue","animateOffset","Platform","OS","BackHandler","addEventListener","removeEventListener","didOpen","modalDidOpen","undefined","modalDidClose","toValue","animationTension","executeCallbacks","timing","duration","start","spring","tension","containerStyles","styles","absolute","container","containerStyle","push","hidden","containerProps","closeOnTouchOutside","defaultOverlayStyle","overlayStyle","defaultModalStyle","modalStyle","transform","translateY","modalProps","propTypes","bool","number","style","func","defaultProps","StyleSheet","create","position","top","left","right","bottom","backgroundColor","justifyContent","borderRadius","margin","padding","flex","height","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  View,\n  ViewPropTypes,\n  StyleSheet,\n  TouchableOpacity,\n  Animated,\n  Platform,\n  BackHandler\n} from 'react-native';\n\nclass Modal extends Component {\n  static propTypes = {\n    open: PropTypes.bool,\n    offset: PropTypes.number,\n    overlayStyle: ViewPropTypes.style,\n    animationDuration: PropTypes.number,\n    animationTension: PropTypes.number,\n    modalDidOpen: PropTypes.func,\n    modalDidClose: PropTypes.func,\n    closeOnTouchOutside: PropTypes.bool,\n    disableOnBackPress: PropTypes.bool\n  };\n\n  static defaultProps = {\n    open: false,\n    offset: 0,\n    animationDuration: 200,\n    animationTension: 40,\n    modalDidOpen: () => undefined,\n    modalDidClose: () => undefined,\n    closeOnTouchOutside: true,\n    disableOnBackPress: false\n  };\n\n  state = {\n    opacity: new Animated.Value(0),\n    scale: new Animated.Value(0.8),\n    offset: new Animated.Value(this.props.offset)\n  };\n\n  componentWillMount() {\n    if (this.props.open) {\n      this.setState({ children: this.props.children });\n      this.open();\n    }\n  }\n\n  componentWillReceiveProps(props) {\n    if (props.open && props.children !== this.state.children) {\n      this.setState({ children: props.children });\n    }\n\n    if (props.animationDuration === 0) {\n      this.state.scale.setValue(1);\n    } else {\n      this.state.scale.setValue(this.props.open ? 1 : 0.8);\n    }\n\n    if (props.open !== this.props.open) {\n      if (props.open) {\n        this.open();\n      } else {\n        this.close();\n      }\n    }\n\n    if (props.offset !== this.props.offset) {\n      this.animateOffset(props.offset);\n    }\n  }\n\n  hardwareBackPress = () => {\n    if (this.state.open) {\n      if (!this.props.disableOnBackPress) {\n        this.close();\n      }\n      return true;\n    }\n\n    return false;\n  };\n\n  componentDidMount() {\n    if (Platform.OS === 'android') {\n      BackHandler.addEventListener('hardwareBackPress', this.hardwareBackPress);\n    }\n  }\n\n  componentWillUnmount() {\n    if (Platform.OS === 'android') {\n      BackHandler.removeEventListener(\n        'hardwareBackPress',\n        this.hardwareBackPress\n      );\n    }\n  }\n\n  executeCallbacks(didOpen) {\n    if (didOpen) {\n      this.props.modalDidOpen();\n    } else {\n      this.setState({ open: false, children: undefined });\n      this.props.modalDidClose();\n    }\n  }\n\n  setPhase(toValue) {\n    if (this.state.open != toValue) {\n      const { animationDuration, animationTension } = this.props;\n      if (animationDuration === 0) {\n        this.state.opacity.setValue(toValue);\n        this.executeCallbacks(toValue === 1);\n      } else {\n        Animated.timing(this.state.opacity, {\n          toValue,\n          duration: animationDuration\n        }).start();\n\n        Animated.spring(this.state.scale, {\n          toValue: toValue ? 1 : 0.8,\n          tension: animationTension\n        }).start(() => this.executeCallbacks(toValue === 1));\n      }\n    }\n  }\n\n  render() {\n    const { opacity, open, scale, offset, children } = this.state;\n    let containerStyles = [\n      styles.absolute,\n      styles.container,\n      this.props.containerStyle\n    ];\n\n    if (!this.state.open) {\n      containerStyles.push(styles.hidden);\n    }\n\n    return (\n      <View\n        pointerEvents={open ? 'auto' : 'none'}\n        style={containerStyles}\n        {...this.props.containerProps}\n      >\n        <TouchableOpacity\n          style={styles.absolute}\n          disabled={!this.props.closeOnTouchOutside}\n          onPress={this.close}\n          activeOpacity={0.75}\n        >\n          <Animated.View\n            style={[\n              styles.defaultOverlayStyle,\n              { opacity },\n              this.props.overlayStyle\n            ]}\n          />\n        </TouchableOpacity>\n        <Animated.View\n          style={[\n            styles.defaultModalStyle,\n            this.props.modalStyle,\n            { opacity, transform: [{ scale }, { translateY: offset }] }\n          ]}\n          {...this.props.modalProps}\n        >\n          {children}\n        </Animated.View>\n      </View>\n    );\n  }\n\n  open() {\n    this.setState({ open: true });\n    this.setPhase(1);\n  }\n\n  close = () => {\n    this.setPhase(0);\n  };\n\n  animateOffset(offset) {\n    Animated.spring(this.state.offset, { toValue: offset }).start();\n  }\n}\n\nconst styles = StyleSheet.create({\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0)'\n  },\n  container: {\n    justifyContent: 'center'\n  },\n  defaultModalStyle: {\n    borderRadius: 2,\n    margin: 20,\n    padding: 10,\n    backgroundColor: '#F5F5F5'\n  },\n  defaultOverlayStyle: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.75)'\n  },\n  hidden: {\n    top: -10000,\n    left: 0,\n    height: 0,\n    width: 0\n  }\n});\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}